<?php

/**
 * UserIdentity represents the data needed to identity a user.
 * It contains the authentication method that checks if the provided
 * data can identity the user.
 */
class UserIdentity extends CUserIdentity
{
	/**
	 * Authenticates a user.
	 * The example implementation makes sure if the username and password
	 * are both 'demo'.
	 * In practical applications, this should be changed to authenticate
	 * against some persistent user identity storage (e.g. database).
	 * @return boolean whether authentication succeeds.
	 */
	public function authenticate()
	{
		$connection=Yii::app()->db;
		$sql = 'SELECT * FROM tbl_user WHERE username="'.$this->username.'" AND password="'.$this->password.'" ';
		$command = $connection->createCommand($sql);
		$dataReader = $command->query();
		if ($dataReader->rowCount == 1) {
			$this->errorCode=self::ERROR_NONE;
		} else {
			$this->errorCode=self::ERROR_PASSWORD_INVALID;
		}
/*
		$users=array(
			// username => password
			'demo'=>'demo',
			'admin'=>'admin',
			'juro'=>'pass',
		);
				

		if(!isset($users[$this->username]))
			$this->errorCode=self::ERROR_USERNAME_INVALID;
		elseif($users[$this->username]!==$this->password)
			$this->errorCode=self::ERROR_PASSWORD_INVALID;
		else
			$this->errorCode=self::ERROR_NONE;
*/
		return !$this->errorCode;
	}
}
